# -*- coding: utf-8 -*-
"""lv2_피로도.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12T-0tB7kF3FH5ZiAg9BsHtfYwGqti1Wb
"""

from itertools import permutations

def solution(k, dungeons):
    # 탐험 가능한 모든 경우
    case = list(permutations(dungeons, len(dungeons)))   
    answer = 0   # 탐험 가능한 최대 던전 수

    # 각 순서마다 탐험 가능한 던전 수 확인
    for i in case:
        hp = k   # 피로도, 던전 수 초기화
        count = 0
        
        # 탐험 던전 수, 소모 피로도 계산
        for j in i:
            if hp >= j[0]:
                count += 1
                hp -= j[1]
        
        # 큰 값의 탐험 던전 수 저장
        answer = max(answer, count)

    return answer

print(solution(80,	[[80,20],[50,40],[30,10]]	))