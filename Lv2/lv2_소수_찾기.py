# -*- coding: utf-8 -*-
"""lv2_소수 찾기.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BJXqV_VyBuSA9YzYLaIL39Gq08_cQWmT
"""

from itertools import permutations

def solution(numbers):
    P, N, answer = [], [], []

    # 나올 수 있는 모든 조합 계산
    for i in range(1, len(numbers)+1):
        P += (list(permutations(numbers, i)))
    print(P)

    # 숫자로 변경
    for i in P:
        N.append(int(''.join(i)))
    print(N)

    # 중복 제거
    N = set(N)
    print(N)

    # 소수 판별
    for i in N:
        check = 1
        # i가 0, 1
        if i < 2:
            check = 0
        # i가 2 이상
        else:
            for j in range(2, int(i**0.5)+1):
                if i % j == 0:
                    check = 0
                    break

        # check가 1이면 소수
        if check:
            answer.append(i)

    return len(answer)

print(solution("17"))
print(solution("011"))