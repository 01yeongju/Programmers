# -*- coding: utf-8 -*-
"""lv1_3진법 뒤집기.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1apExAFZh9PEBj_rWaoSzE1smUcJ8B1MR
"""

def solution(n):
    answer = ''

    while n > 2:
        answer += str(n % 3)
        n = n // 3
    # test1(45) : 002
    # test2(125) : 2211

    answer += str(n)
    # test1(45) : 0021
    # test2(125) : 22111

    return int(answer, 3)
    # test1(45) : 7
    # test2(125) : 229

print(solution(45))
print(solution(125))
print(solution(1))

'''
# 처음 풀이
def solution(n):
    Ter2Dec = []

    if n == 1:
        return 1
        
    while True:
        Ter2Dec.insert(0, n % 3)
        n = n // 3
        if n == 0 or n == 1 or n == 2:
            Ter2Dec.insert(0, n)
            break

    Ter2Dec.reverse()
    answer = ''.join(map(str, Ter2Dec))

    return int(answer, 3)
'''